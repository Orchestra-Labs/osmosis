# Common settings for all servers
# RPC Requests
server {
    listen 443 ssl;
    ssl_certificate /etc/letsencrypt/live/lcd.testnet.node2.symphonychain.org/fullchain.pem; # managed by Certbot
    ssl_certificate_key /etc/letsencrypt/live/lcd.testnet.node2.symphonychain.org/privkey.pem; # managed by Certbot
    include /etc/letsencrypt/options-ssl-nginx.conf; # managed by Certbot
    ssl_dhparam /etc/letsencrypt/ssl-dhparams.pem; # managed by Certbot

    server_name ~^rpc\.testnet(\.node(\d+))?\.symphonychain\.org$;

    location / {
        proxy_pass http://localhost:26654;
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection "upgrade";
        proxy_set_header Host $host;
    }

    location /dump_consensus_state {
        allow 10.128.0.2;  # Internal IP for node1
        allow 10.128.0.3;  # Internal IP for node2
        allow 10.128.0.4;  # Internal IP for node3
        allow 10.128.0.5;  # Internal IP for node4
        deny all;          # Deny all other IP addresses

        proxy_pass http://localhost:26654/dump_consensus_state;
    }
}

# LCD Requests
server {
    listen 443 ssl;
    ssl_certificate /etc/letsencrypt/live/lcd.testnet.node2.symphonychain.org/fullchain.pem; # managed by Certbot
    ssl_certificate_key /etc/letsencrypt/live/lcd.testnet.node2.symphonychain.org/privkey.pem; # managed by Certbot
    include /etc/letsencrypt/options-ssl-nginx.conf; # managed by Certbot
    ssl_dhparam /etc/letsencrypt/ssl-dhparams.pem; # managed by Certbot

    server_name ~^lcd\.testnet(\.node(\d+))?\.symphonychain\.org$;

    location / {
        proxy_pass http://localhost:1317;
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection "upgrade";
        proxy_set_header Host $host;
    }

    location /dump_consensus_state {
        allow 10.128.0.2;  # Internal IP for node1
        allow 10.128.0.3;  # Internal IP for node2
        allow 10.128.0.4;  # Internal IP for node3
        allow 10.128.0.5;  # Internal IP for node4
        deny all;          # Deny all other IP addresses

        proxy_pass http://localhost:1317/dump_consensus_state;
    }
}

# HTTP to HTTPS redirection
server {
    if ($host = rpc.testnet.symphonychain.org) {
        return 301 https://$host$request_uri;
    } # managed by Certbot


    if ($host = lcd.testnet.symphonychain.org) {
        return 301 https://$host$request_uri;
    } # managed by Certbot


    if ($host = rpc.testnet.node2.symphonychain.org) {
        return 301 https://$host$request_uri;
    } # managed by Certbot


    if ($host = lcd.testnet.node2.symphonychain.org) {
        return 301 https://$host$request_uri;
    } # managed by Certbot

    listen 80;
    server_name ~^lcd\.testnet(\.node(\d+))?\.symphonychain\.org$ ~^rpc\.testnet(\.node(\d+))?\.symphonychain\.org$;

    location / {
        if ($host ~* ^(rpc\.testnet\.symphonychain\.org|lcd\.testnet\.symphonychain\.org|rpc\.testnet\.node2\.symphonychain\.org|lcd\.testnet\.node2\.symphonychain\.org)$) {
            return 301 https://$host$request_uri;
        }
    }
    return 404; # managed by Certbot
}

# gRPC Requests
server {
    listen 443 ssl http2;
    ssl_certificate /etc/letsencrypt/live/lcd.testnet.node2.symphonychain.org/fullchain.pem; # managed by Certbot
    ssl_certificate_key /etc/letsencrypt/live/lcd.testnet.node2.symphonychain.org/privkey.pem; # managed by Certbot
    include /etc/letsencrypt/options-ssl-nginx.conf; # managed by Certbot
    ssl_dhparam /etc/letsencrypt/ssl-dhparams.pem; # managed by Certbot

    # GRPC Requests
    server_name ~^grpc\.testnet(\.node(\d+))?\.symphonychain\.org$;

    location / {
        grpc_pass grpcs://localhost:9090; # Use grpc:// for gRPC requests
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection "upgrade";
        proxy_set_header Host $host;
    }

    location /dump_consensus_state {
        allow 10.128.0.2;  # Internal IP for node1
        allow 10.128.0.3;  # Internal IP for node2
        allow 10.128.0.4;  # Internal IP for node3
        allow 10.128.0.5;  # Internal IP for node4
        deny all;          # Deny all other IP addresses

        grpc_pass grpcs://localhost:9090; # Use grpcs:// for secure gRPC requests
    }
}
